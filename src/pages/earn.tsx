import { useState } from 'react';
import type { NextPageWithLayout } from '@/types';
import cn from 'classnames';
import { NextSeo } from 'next-seo';

import DashboardLayout from '@/layouts/_dashboard';
import { RadioGroup } from '@/components/ui/radio-group';

import Image from '@/components/ui/image';
import Button from '@/components/ui/button';

import Input from '@/components/ui/forms/input';

import InputLabel from '@/components/ui/input-label';

import Cam1 from '@/assets/images/5.png';
import Cam2 from '@/assets/images/6.png';
import Cam3 from '@/assets/images/7.png';
import Cam4 from '@/assets/images/8.png';
import Cam5 from '@/assets/images/9.png';


const CameraOptions = [
  {
    name: 'CameraOne',
    value: 'one',
    icon: <Image src={Cam1} className="h-6 w-6" />,
    id: '#1903',
  },
  {
    name: 'CameraTwo',
    value: 'two',
    icon: <Image src={Cam2} className="h-6 w-6" />,
    id: '#1904',
  },
  {
    name: 'CameraThree',
    value: 'three',
    icon: <Image src={Cam3} className="h-6 w-6" />,
    id: '#1905',
  },
  {
    name: 'CameraFour',
    value: 'four',
    icon: <Image src={Cam4} className="h-6 w-6" />,
    id: '#1906',
  },
  {
    name: 'CameraFive',
    value: 'five',
    icon: <Image src={Cam5} className="h-6 w-6" />,
    id: '#1907',
  },
];

type CameraTypeProps = {
  value: string;
  onChange: (value: string) => void;
};

function CameraType({ value, onChange }: CameraTypeProps) {
  return (
    <RadioGroup
      value={value}
      onChange={onChange}
      className="grid grid-cols-5 gap-3"
    >
      {CameraOptions.map((item, index) => (
        <RadioGroup.Option value={item.value} key={index}>
          {({ checked }) => (
            <span
              className={`relative flex cursor-pointer items-center justify-center rounded-lg border-2 border-solid border-tte bg-white text-center text-sm font-medium tracking-wider shadow-card transition-all hover:shadow-large dark:bg-light-dark ${
                checked ? 'border-brand' : 'border-white dark:border-light-dark'
              }`}
            >
              <span className="relative flex h-14 flex-col items-center justify-center gap-3 px-2 text-center text-xs uppercase sm:h-28 sm:gap-4 sm:text-sm">
                {item.icon}
              </span>
            </span>
          )}
        </RadioGroup.Option>
      ))}
    </RadioGroup>
  );
}

const EarnPage: NextPageWithLayout = () => {
  let [publish, setPublish] = useState(true);
  let [explicit, setExplicit] = useState(false);
  let [unlocked, setUnlocked] = useState(false);
  let [cameraType, setCameraType] = useState('fixed');
  let [camera, setCamera] = useState(CameraOptions[0].value);

  const handleChange = (event) => {
    console.log(event.target.value);
    setCamera(event.target.value);
  };

  return (
    <>
      <NextSeo
        title="Create NFT"
        description="TikToken Web3 Dapp allows users to earn TT2E BSC tokens while using TikTok Social Network. The more TT2E Camera NFTs users own, the more they will maximise the earnings generated by their TikTok content"
      />
      <div className="mx-auto w-full px-4 pt-8 pb-14 sm:px-6 sm:pb-20 sm:pt-12 lg:px-8 xl:px-10 2xl:px-0">
        <h2 className="mb-6 text-lg font-medium uppercase tracking-wider text-gray-900 dark:text-white sm:mb-10 sm:text-2xl">
          My Camera NFTS
        </h2>
        <div className="mb-8 grid grid-cols-1 gap-12 lg:grid-cols-3">
          <div className="lg:col-span-2">
            {/* File uploader */}

            {/* NFT price type */}
            <div className="flex items-center justify-between gap-4"></div>
            {publish && (
              <CameraType value={cameraType} onChange={setCameraType} />
            )}
          </div>
        </div>
        {/* External link */}

        <section className="text-white ">
          <div className="container mx-auto  ">
            <div className="mx-auto  mb-10 flex flex-col items-center  rounded-lg border border-gray-200 p-5 sm:flex-row">
              <div className="mt-6 flex-grow text-center sm:mt-0 sm:text-left">
                <h1 className="title-font mb-2 text-xl font-medium  uppercase  text-tte">
                  CAMERA NFT SELECTED
                </h1>

                <div className="md:flex  " value={camera} onChange={setCamera}>
                  <div className="flex w-full space-x-3 text-sm font-medium uppercase md:w-1/2">
                    <div className="w-1/2">
                      <h2 className="">ID</h2>
                      <p>#1345</p>
                    </div>
                    <div className="w-1/2">
                      <h2 className="">TIER</h2>
                      <p>1</p>
                    </div>
                  </div>

                  <div className="flex w-full space-x-3 text-sm font-medium uppercase md:w-1/2">
                    <div className="w-1/2">
                      <h2 className="">LVL</h2>
                      <p>MAX</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* External link */}

        <section className="body-font text-white">
          <div className="container mx-auto ">
            <div className="mx-auto  mb-10 flex flex-col items-center  rounded-lg border border-gray-200 p-5 sm:flex-row">
              <div className="mt-6 flex-grow text-center text-white sm:mt-0 sm:text-left">
                <h1 className="mb-2 text-xl font-medium uppercase  text-tte">
                  REMAINING
                </h1>

                <div className="text-sm font-medium uppercase md:flex ">
                  <div className="flex w-full space-x-3 md:w-1/2">
                    <div className="w-1/2 ">
                      <h2 className="">VIDEO TO MAKE</h2>
                      <span className="">VIDEO TO WATCH</span>
                    </div>
                    <div className="w-1/2">
                      <p>: 1</p>
                      <p>: 1</p>
                    </div>
                  </div>
                  <div className="flex w-full space-x-3 text-sm font-medium uppercase md:w-1/2">
                    <div className="w-1/2">
                      <h2 className="">TOTAL CLAIMED</h2>
                      <span className="">TOTAL CLAIMED</span>
                    </div>
                    <div className="w-1/2">
                      <p>: 5</p>
                      <p>: 1</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* External link */}
        <section className="body-font text-white">
          <div className="container mx-auto ">
            <div className="mx-auto  mb-10 flex flex-col items-center  rounded-lg border border-gray-200 p-5 sm:flex-row">
              <div className="mt-6 flex-grow text-center text-tte sm:mt-0 sm:text-left">
                <InputLabel title="Claim Rewards" />
                <Input
                  type="text"
                  placeholder="Paste The TikTok Video Link Here"
                />

                <div className="font-bold md:flex ">
                  <div className="mt-8 flex w-full space-x-3 md:w-1/2">
                    <Button shape="rounded">Claim</Button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  );
};

EarnPage.getLayout = function getLayout(page) {
  return <DashboardLayout>{page}</DashboardLayout>;
};

export default EarnPage;